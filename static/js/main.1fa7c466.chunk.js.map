{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","toDoList","setTodoList","value","setValue","addToDo","updatedToDoList","className","onSubmit","mouseClick","preventDefault","id","placeholder","onChange","keyBoardStroke","target","type","map","todo","index","onClick","filteredTodoList","filter","currentTodoListValue","handleDelete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAiFeA,MA1Ef,WAAe,MAEkBC,mBAAS,CACtC,CAACC,KAAK,gBACN,CAACA,KAAK,mBACN,CAACA,KAAK,WALK,mBAENC,EAFM,KAEGC,EAFH,OAQYH,mBAAS,IARrB,mBAQNI,EARM,KAQAC,EARA,KAmBPC,EAAU,SAACL,GACf,IAAMM,EAAe,sBAAOL,GAAP,CAAgB,CAACD,UACtCE,EAAYI,IAad,OACA,eAAC,IAAD,WACI,mDAEA,cAAC,IAAD,CAAYC,UAAY,YAAxB,SACE,uBAAMC,SA7BS,SAACC,GACpBA,EAAWC,iBACXL,EAAQF,GACRC,EAAS,KA0BL,UACE,cAAC,IAAD,CACAO,GAAK,YACLR,MAASA,EACTS,YAAa,aACbC,SAAY,SAAAC,GAAc,OAAIV,EAAUU,EAAeC,OAAOZ,UAC9D,cAAC,IAAD,CAAQQ,GAAG,UAASK,KAAK,SAAzB,4BAIJ,cAAC,IAAD,CAAWT,UAAY,WAAvB,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAKI,GAAG,aAAR,SAGAV,EAASgB,KAAI,SAACC,EAAKC,GAAN,OACX,sBAAKR,GAAK,UAAV,UACE,+BAAM,mBAAGA,GAAG,WAAN,SAAkBO,EAAKlB,SAC7B,cAAC,IAAD,CAAQW,GAAG,SAASS,QAAW,kBAhCpB,SAACF,GACpB,IAAMG,EAAmBpB,EAASqB,QAAO,SAAAC,GAAoB,OAAKA,IAAyBL,KAC3FhB,EAAYmB,GA8B+BG,CAAaN,IAAhD,sBAFuBC,QAQ3B,cAAC,IAAD,aC1DOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1fa7c466.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport { Container,Button,Form,FormInput,Col,Row } from \"shards-react\";\n \nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n \nfunction App() {\n  //Setup To do list \n  const [toDoList,setTodoList] = useState([\n    {text:\"Mow the lawn\"},\n    {text:\"Wash the dishes\"},\n    {text:\"Study\"}\n  ]);\n\n  const [value,setValue] = useState('');\n  // handle submission of form \n  const handleSubmit = (mouseClick) => {\n    mouseClick.preventDefault();\n    addToDo(value);\n    setValue('')\n\n  };\n \n    // Add to do \n\n  const addToDo = (text) => {\n    const updatedToDoList = [...toDoList,{text}];\n    setTodoList(updatedToDoList)\n  };\n\n  // Delete to do \n  const handleDelete = (todo) =>{\n    const filteredTodoList = toDoList.filter(currentTodoListValue => (currentTodoListValue !== todo));\n    setTodoList(filteredTodoList)\n  };\n  \n\n  // \n  \n  \n  return (\n  <Container>\n      <h1>Kiefer's ToDo App</h1>\n      \n      <Container  className = 'todoInput'>\n        <form onSubmit={handleSubmit}>\n          <FormInput\n          id = \"todoinput\"\n          value = {value}\n          placeholder ='Enter Todo'\n          onChange = {keyBoardStroke => setValue( keyBoardStroke.target.value)}/>\n          <Button id='addtodo'type='submit'>Add To Do</Button>\n        </form>\n      </Container>\n      \n      <Container className = 'todoList'>\n        <Row>\n        <Col id='todocolumn'>\n        \n        {\n        toDoList.map((todo,index) => (\n          <div id = \"tododiv\" key={index}>\n            <span><p id=\"todotext\">{todo.text}</p></span>\n            <Button id='delete' onClick = {()=>handleDelete(todo)}>Delete</Button>\n            \n          </div>\n          \n        ))}\n        </Col>\n        <Col></Col>\n        </Row>\n      </Container>\n\n      \n   \n   </Container>\n    \n  );\n        }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}